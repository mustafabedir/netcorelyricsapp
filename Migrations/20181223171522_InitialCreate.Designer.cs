// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KoksHamit.Migrations
{
    [DbContext(typeof(MuzikContext))]
    [Migration("20181223171522_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Etiket", b =>
                {
                    b.Property<int>("etiketID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("etiketAd");

                    b.Property<int>("muzikID");

                    b.HasKey("etiketID");

                    b.HasIndex("muzikID");

                    b.ToTable("etikets");
                });

            modelBuilder.Entity("Kullanici", b =>
                {
                    b.Property<int>("kullaniciID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ad");

                    b.Property<string>("mail");

                    b.Property<string>("password");

                    b.Property<string>("soyad");

                    b.Property<string>("username");

                    b.HasKey("kullaniciID");

                    b.ToTable("kullanicis");
                });

            modelBuilder.Entity("Muzik", b =>
                {
                    b.Property<int>("muzikID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("muzikAd");

                    b.Property<int>("sanatciID");

                    b.Property<string>("sozler");

                    b.HasKey("muzikID");

                    b.HasIndex("sanatciID");

                    b.ToTable("muziks");
                });

            modelBuilder.Entity("Sanatci", b =>
                {
                    b.Property<int>("sanatciID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("sanatciAd");

                    b.HasKey("sanatciID");

                    b.ToTable("sanatcis");
                });

            modelBuilder.Entity("Yonetici", b =>
                {
                    b.Property<int>("adminID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("password");

                    b.Property<string>("username");

                    b.HasKey("adminID");

                    b.ToTable("yoneticis");
                });

            modelBuilder.Entity("Yorum", b =>
                {
                    b.Property<int>("yorumID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("icerik");

                    b.Property<int>("kullaniciID");

                    b.Property<int>("muzikID");

                    b.HasKey("yorumID");

                    b.HasIndex("kullaniciID");

                    b.HasIndex("muzikID");

                    b.ToTable("yorums");
                });

            modelBuilder.Entity("Etiket", b =>
                {
                    b.HasOne("Muzik", "muzik")
                        .WithMany("etikets")
                        .HasForeignKey("muzikID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Muzik", b =>
                {
                    b.HasOne("Sanatci", "sanatci")
                        .WithMany("muziks")
                        .HasForeignKey("sanatciID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Yorum", b =>
                {
                    b.HasOne("Kullanici", "kullanici")
                        .WithMany()
                        .HasForeignKey("kullaniciID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Muzik", "muzik")
                        .WithMany("yorums")
                        .HasForeignKey("muzikID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
